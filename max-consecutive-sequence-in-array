/*
This problem was asked by Facebook.

Given a list of integers L, find the maximum length of a sequence of consecutive numbers that can be formed 
using elements from L.

For example, given L = [5, 2, 99, 3, 4, 1, 100], return 5 as we can build a sequence [1, 2, 3, 4, 5] which 
has length 5.
*/

function longestSequence(L) {
    //creating a new set to remove duplicates and then sort
    let sortedArr = [...new Set(L)].sort((a,b) => (a-b));
    let longestSeq = 1;
    let currentSeq = 1;

    for (let i = 1; i <sortedArr.length; i++){
        //compare the index with the index immediately before to avoid a null on the last index
        if (sortedArr[i] === sortedArr[i-1]+1){
            //if consecutive, current sequence count will increase
            currentSeq += 1;
        } else {
            // if not, longest sequest will be updated and current sequence will reset to 1
            longestSeq = Math.max(currentSeq,longestSeq);
            currentSeq = 1;
        }
    };
    //final check that the longest sequence has been updated after loop ends
    longestSeq = Math.max(currentSeq,longestSeq);
    return longestSeq;
};
