/*Question: Given the head of a singly linked list, return the middle node of the list. If there are two middle nodes, return the second middle node.
Example: For the list 1 -> 2 -> 3 -> 4 -> 5, the function should return the node with value 3. For 1 -> 2 -> 3 -> 4 -> 5 -> 6, it should return the node with value 4. */


function hasCycle(head) {
    let fast = head;
    let slow = head;

    while (fast && fast.next) {
        fast = fast.next.next;
        slow = slow.next;

        if (fast === slow) {
            return true;
        }
    } return false;
};
